FROM golang:1.9-alpine3.6 as builder

ENV PILOT_DIR /go/src/github.com/AliyunContainerService/log-pilot
ARG GOOS=linux
ARG GOARCH=amd64
RUN set -ex && apk add --no-cache make git
WORKDIR $PILOT_DIR
COPY . $PILOT_DIR
RUN go install 

FROM ruby:2.7-slim-buster as gem

ARG DEBIAN_FRONTEND=noninteractive

COPY Gemfile /Gemfile

SHELL ["/bin/bash", "-e", "-o", "pipefail", "-c"]

RUN apt-get update && \
    apt-get install -y --no-install-recommends g++ gcc make && \
    echo 'gem: --no-document' >> /etc/gemrc && \
    gem install --file Gemfile

FROM ruby:2.7-slim-buster
COPY --from=gem /usr/local/bundle/ /usr/local/bundle 
SHELL ["/bin/bash", "-e", "-o", "pipefail", "-c"]

RUN apt-get update && \
    apt-get install -y --no-install-recommends libjemalloc2 python && \
    apt-get clean -y && \
    ulimit -n 65536 && \    
    rm -rf \
        /var/cache/debconf/* \
        /var/lib/apt/lists/* \
        /var/log/* \
        /var/tmp/* \
        rm -rf /tmp/*

COPY --from=builder /go/bin/log-pilot /pilot/pilot
COPY assets/entrypoint.py assets/fluentd/ assets/healthz /pilot/
RUN mkdir -p /etc/fluentd && \
    mv /pilot/plugins /etc/fluentd/ && \
    chmod +x /pilot/pilot /pilot/entrypoint.py /pilot/healthz /pilot/config.fluentd

HEALTHCHECK CMD /pilot/healthz

VOLUME /etc/fluentd/conf.d
VOLUME /pilot/pos
WORKDIR /pilot/
ENV PILOT_TYPE=fluentd
CMD ["python","/pilot/entrypoint.py"]
